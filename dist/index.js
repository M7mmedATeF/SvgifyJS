var Svgify=function(){"use strict";class a{constructor(t){this.path="assets/icons",this.version=1,this.loadingMSG="",this.errorMSG="",this.FetchIcon=i=>fetch(i,{method:"GET",headers:{"Content-Type":"application/json"}}),this.requestIDX={},this.FetchingList={},this.FetchIconData=async(i,e=!1)=>{let r;try{if(Object.keys(this.FetchingList).includes(i))r=this.FetchingList[i];else if(e){const o=`${this.path}/${i}.svg`,h=this.FetchIcon(o);this.FetchingList[i]=h,r=h}else{const o=this.requestIDX[i]+1||0;o===0&&(this.requestIDX[i]=o),r=new Promise(h=>{setTimeout(async()=>{const c=await this.FetchIconData(i,!0);h(c)},o===0?0:5)})}}catch(o){throw console.error(`Error fetching icon ${i}`),o}return r},t!=null&&t.path&&(this.path=t.path),t!=null&&t.version&&(this.version=t.version),t!=null&&t.FetchIcon&&(this.FetchIcon=t.FetchIcon),t!=null&&t.loadingMSG&&(this.loadingMSG=t.loadingMSG),t!=null&&t.errorMSG&&(this.errorMSG=t.errorMSG),this.currentVersion=Number(localStorage.getItem("svgify_cached_version"))||-1,this.currentVersion===-1?(localStorage.setItem("svgify_cached_version",this.version.toString()),this.currentVersion=this.version):this.currentVersion!==this.version&&(localStorage.clear(),localStorage.setItem("svgify_cached_version",this.version.toString()),this.currentVersion=this.version),this.init()}init(){const t=document.querySelectorAll("i.svgify");(t==null?void 0:t.length)>0&&t.forEach(i=>{const e=i.getAttribute("data-font-weight")||"fill",r=e==="fill"?"svg_modifier_style_fill":e==="stroke"?"svg_modifier_style_stroke":"svg_modifier_style_both";i.classList.add("svg_modifier_style",r),i.innerHTML=""+this.loadingMSG,this.InitSvgIcon(i)})}async InitSvgIcon(t){let i=t.getAttribute("data-icon");if(!i){console.error("Invalid Icon Name"),t.innerHTML=""+this.errorMSG;return}i=""+i;const e=t.getAttribute("data-scale")||1;let r=localStorage.getItem(`svgify_${this.version}_${i}`);if(!r){const h=await(await this.FetchIconData(i)).text();if(h.match(/<html/g))throw t.innerHTML=""+this.errorMSG,new Error("Invalid SVG format");r=this.modifyNewSvgProps(""+h,i),localStorage.setItem(`svgify_${this.version}_${i}`,r)}r=this.calculateSizeRatios(r,Number(e)),t.innerHTML=r}modifyNewSvgProps(t,i){if(t.match(/<html/g))throw new Error("Invalid SVG format");t=t.replace(/fill="[^"]*"/g,"").replace(/stroke="[^"]*"/g,"");try{localStorage.setItem(`svgify_${this.version}_${i}`,JSON.stringify(t))}catch(e){if(e instanceof DOMException&&e.code===22)console.warn("Storage quota exceeded, clearing storage..."),localStorage.clear();else throw e}return t}calculateSizeRatios(t,i){const e=t.match(/width="(\d+(\.\d+)?(px|em|rem|%)?)"/),r=t.match(/height="(\d+(\.\d+)?(px|em|rem|%)?)"/);let o=1;if(e&&r){const h=parseFloat(e[1]);o=parseFloat(r[1])/h}else e||(t=t.replace("<svg",'<svg width="1em"')),r||(t=t.replace("<svg",'<svg height="1em"'));return t=t.replace(/height="[^"]*"/,`height="${i*1.5*o}em"`),t.replace(/width="[^"]*"/,`width="${i*1.5}em"`)}}return a}();
